theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pivot_t
pivot_t = pivot_t %>% arrange(desc(Day))
pivot_t
pivot_t = pivot_t %>% arrange(Day)
pivot_t
ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pivot_t
ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type, group=Day)) +
labs(y="Average wave size (m)", x="Date") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pivot_t) +
geom_line(aes(y = value, color=wave_type, group=Day)) +
labs(y="Average wave size (m)", x="Date") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave", "highest_wave", "avg_wave"), names_to = "wave_type", values_to = "value")
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(wave_plot)
per_day_wind = data %>% mutate(day = as_date(timestamp)) %>% group_by(day) %>% summarize(avg_wind_speed = mean(wind_speed))
plot_wind = ggplot(per_day_wind) +
geom_line(aes(x=day, y = avg_wind_speed), col="black") +
scale_x_date(date_breaks = "1 day") +
labs(y="Wind speed (km/h)", x="Day") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
per_day_wind = surf_data %>% mutate(day = as_date(timestamp)) %>% group_by(day) %>% summarize(avg_wind_speed = mean(wind_speed))
plot_wind = ggplot(per_day_wind) +
geom_line(aes(x=day, y = avg_wind_speed), col="black") +
scale_x_date(date_breaks = "1 day") +
labs(y="Wind speed (km/h)", x="Day") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(plot_wind)
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_discrete(name = "Wave type")
ggplotly(wave_plot)
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(name = "Wave type") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(wave_plot)
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, fill=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(name = "Wave type") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, fill=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(name = "Wave type") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(name = "Wave type") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(labels = c("Average wave size", "Maximum wave size", "Minimum wave size"))
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
#theme(legend.position = "bottom") +
#theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_fill_discrete(labels = c("Average wave size", "Maximum wave size", "Minimum wave size"))
#theme(legend.position = "bottom") +
#theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(Day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(Day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
#scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
ggplotly(wave_plot)
wave_plot
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(Day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=Day, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
?scale_x_date
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day", labels = waiver()) +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(Date, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(Day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day", labels = per_day_data$Day) +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
per_day_data$Day
class(per_day_data$Day)
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "7 day", labels = per_day_data$Day) +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day", labels = per_day_data$Day) +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="Date") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
?mean
# What I Want to do is to convert the two columns day and hour in the timestamp format
# First I separate the day of the week from gg/month
cleaned_data = raw_data %>%
separate(day, c("Week day", "Day"), sep = " ", extra = "merge") %>%
mutate(year = 2024) %>%
mutate(timestamp = dmy_hm(paste(Day, year, hour,  sep = " ")))
cleaned_data = cleaned_data %>% separate(waves_size, c("min_wave_size", "max_wave_size"), sep = " - ")
cleaned_data = cleaned_data %>% separate(wind_direction, c("w","d", "wind_direction"), sep=" ") %>%
select(-w, -d)
surf_data = cleaned_data %>% select(`Week day`, hour, timestamp, wind_speed, wind_direction, min_wave_size, max_wave_size) %>%
mutate(min_wave_size = as.numeric(min_wave_size), max_wave_size = as.numeric(max_wave_size), avg_wave_size = (min_wave_size+max_wave_size)/2, day = as_date(timestamp)) %>% arrange(timestamp)
surf_data
surf_data
# What I Want to do is to convert the two columns day and hour in the timestamp format
# First I separate the day of the week from gg/month
cleaned_data = raw_data %>%
separate(day, c("Week day", "Day"), sep = " ", extra = "merge") %>%
mutate(year = 2024) %>%
mutate(timestamp = dmy_hm(paste(Day, year, hour,  sep = " ")))
cleaned_data = cleaned_data %>% separate(waves_size, c("min_wave_size", "max_wave_size"), sep = " - ")
cleaned_data = cleaned_data %>% separate(wind_direction, c("w","d", "wind_direction"), sep=" ") %>%
select(-w, -d)
surf_data = cleaned_data %>% select(`Week day`, hour, timestamp, wind_speed, wind_direction, min_wave_size, max_wave_size) %>%
mutate(day = as_date(timestamp), min_wave_size = as.numeric(min_wave_size), max_wave_size = as.numeric(max_wave_size), avg_wave_size = (min_wave_size+max_wave_size)/2) %>% arrange(timestamp)
surf_data
surf_data
# What I Want to do is to convert the two columns day and hour in the timestamp format
# First I separate the day of the week from gg/month
cleaned_data = raw_data %>%
separate(day, c("Week day", "Day"), sep = " ", extra = "merge") %>%
mutate(year = 2024) %>%
mutate(timestamp = dmy_hm(paste(Day, year, hour,  sep = " ")))
cleaned_data = cleaned_data %>% separate(waves_size, c("min_wave_size", "max_wave_size"), sep = " - ")
cleaned_data = cleaned_data %>%
separate(wind_direction, c("w","d", "wind_direction"), sep=" ") %>%
select(-w, -d) +
mutate(day = as_date(timestamp))
# What I Want to do is to convert the two columns day and hour in the timestamp format
# First I separate the day of the week from gg/month
cleaned_data = raw_data %>%
separate(day, c("Week day", "Day"), sep = " ", extra = "merge") %>%
mutate(year = 2024) %>%
mutate(timestamp = dmy_hm(paste(Day, year, hour,  sep = " ")))
cleaned_data = cleaned_data %>% separate(waves_size, c("min_wave_size", "max_wave_size"), sep = " - ")
cleaned_data = cleaned_data %>%
separate(wind_direction, c("w","d", "wind_direction"), sep=" ") %>%
select(-w, -d) %>%
mutate(day = as_date(timestamp))
surf_data = cleaned_data %>% select(`Week day`, day, timestamp, wind_speed, wind_direction, min_wave_size, max_wave_size) %>%
mutate(min_wave_size = as.numeric(min_wave_size), max_wave_size = as.numeric(max_wave_size), avg_wave_size = (min_wave_size+max_wave_size)/2) %>% arrange(timestamp)
surf_data
surf_data
# Computing best day part
# This is just a test, I'm gonna create a stupid function to compute a score for the day just to try the dashboard
best_day_data = surf_data %>%
group_by(`Week day`, day) %>%
summarize(highest_wave = max(max_wave_size),
min_wave = round(min(min_wave_size),2),
avg_wave = round(mean(avg_wave_size),2),
max_wind = round(max(wind_speed),2),
avg_wind = round(mean(wind_speed),2),
min_wind = round(min(wind_speed)),2) %>%
mutate(score = highest_wave + avg_wave) %>%
arrange(desc(score))
best_day = best_day_data[1, ]
best_day
best_day
best_day_data = best_day_data %>% arrange(Day)
best_day_data = best_day_data %>% arrange(day)
highest_wave_plot = ggplot(best_day_data) +
geom_bar(aes(x=day, y = highest_wave), stat = 'identity', fill="#6ca3e9") +
theme_bw() +
labs(x='Day', y = "Height (m)")
ggplotly(highest_wave_plot)
best_day_data = best_day_data %>% arrange(day)
highest_wave_plot = ggplot(best_day_data) +
geom_bar(aes(x=day, y = highest_wave), stat = 'identity', fill="#6ca3e9") +
scale_x_date(breaks = "1 day")
theme_bw() +
labs(x='Day', y = "Height (m)")
ggplotly(highest_wave_plot)
best_day_data = best_day_data %>% arrange(day)
highest_wave_plot = ggplot(best_day_data) +
geom_bar(aes(x=day, y = highest_wave), stat = 'identity', fill="#6ca3e9") +
scale_x_date(breaks = "1 day", date_labels = "%d %B")
theme_bw() +
labs(x='Day', y = "Height (m)")
ggplotly(highest_wave_plot)
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
wave_plot
ggplotly(wave_plot)
per_day_wind = surf_data %>% mutate(day = as_date(timestamp)) %>% group_by(day) %>% summarize(avg_wind_speed = mean(wind_speed))
plot_wind = ggplot(per_day_wind) +
geom_line(aes(x=day, y = avg_wind_speed), col="black") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
labs(y="Wind speed (km/h)", x="") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(plot_wind)
a = ggplotly(highest_wave_plot)
a$preRenderHook()
a$x
a$jsHooks
best_day_data = best_day_data %>% arrange(day)
highest_wave_plot = ggplot(best_day_data) +
geom_bar(aes(x=day, y = highest_wave), stat = 'identity', fill="#6ca3e9") +
scale_x_date(breaks = "1 day", date_labels = "%d %B")
theme_bw() +
labs(x='', y = "Height (m)")
ggplotly(highest_wave_plot)
best_day_data = best_day_data %>% arrange(day)
highest_wave_plot = ggplot(best_day_data) +
geom_bar(aes(x=day, y = highest_wave), stat = 'identity', fill="#6ca3e9") +
scale_x_date(breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
labs(x='', y = "Height (m)")
ggplotly(highest_wave_plot)
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(wave_plot)
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
scale_color_manual(
name = "Type",
values = c(
"avg_wave_size" = "#1f77b4",   # color for Average wave size
"max_wave_size" = "#ff7f0e",   # color for Maximum wave size
"min_wave_size" = "#2ca02c"    # color for Minimum wave size
),
labels = c("Average wave size", "Maximum wave size", "Minimum wave size")
)  +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(wave_plot)
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
scale_color_manual(
name = "Type",
values = c(
"avg_wave_size" = "#1f77b4",   # color for Average wave size
"max_wave_size" = "#ff7f0e",   # color for Maximum wave size
"min_wave_size" = "#2ca02c"    # color for Minimum wave size
),
label = c("Average wave size", "Maximum wave size", "Minimum wave size")
)  +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(wave_plot)
?scale_color_manuale
?scale_color_manual
per_day_data = surf_data %>%
mutate(date = as_date(timestamp)) %>%
group_by(day, date) %>%
summarise(min_wave_size = min(min_wave_size), max_wave_size = max(max_wave_size), avg_wave_size = mean(avg_wave_size))
pivot_t = pivot_longer(per_day_data, cols = c("min_wave_size", "max_wave_size", "avg_wave_size"), names_to = "wave_type", values_to = "value")
wave_plot = ggplot(pivot_t) +
geom_line(aes(x=date, y = value, color=wave_type)) +
labs(y="Average wave size (m)", x="") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
theme_bw() +
scale_color_discrete(name = "Type", labels = c("Average wave size", "Maximum wave size", "Minimum wave size")) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(wave_plot)
per_day_wind = surf_data %>% mutate(day = as_date(timestamp)) %>% group_by(day) %>% summarize(avg_wind_speed = mean(wind_speed))
plot_wind = ggplot(per_day_wind) +
geom_line(aes(x=day, y = avg_wind_speed), col="orange") +
scale_x_date(date_breaks = "1 day", date_labels = "%d %B") +
labs(y="Wind speed (km/h)", x="") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(plot_wind)
?textBox
View(surf_data)
